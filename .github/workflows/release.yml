name: Release

on:
  push:
    tags:
      - 'v*'

env:
  GO_VERSION: '1.19'

jobs:
  build-release:
    name: Build Release
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
          - os: linux
            arch: arm64
          - os: darwin
            arch: amd64
          - os: darwin
            arch: arm64
          - os: windows
            arch: amd64
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
          
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
      - name: Build binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
        run: |
          VERSION=${{ steps.get_version.outputs.VERSION }}
          BINARY_NAME=mobot-${VERSION}-${{ matrix.os }}-${{ matrix.arch }}
          if [ "${{ matrix.os }}" = "windows" ]; then
            BINARY_NAME=${BINARY_NAME}.exe
          fi
          
          go build -ldflags="-s -w -X main.version=${VERSION}" \
            -o ${BINARY_NAME} \
            ./cmd/mobot2025/main.go
            
          # Create archive
          if [ "${{ matrix.os }}" = "windows" ]; then
            zip ${BINARY_NAME}.zip ${BINARY_NAME}
          else
            tar czf ${BINARY_NAME}.tar.gz ${BINARY_NAME}
          fi
          
      - name: Upload artifacts
        uses: actions/upload-artifact@v3
        with:
          name: release-${{ matrix.os }}-${{ matrix.arch }}
          path: mobot-*

  create-release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: build-release
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: ./artifacts
          
      - name: Get version
        id: get_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
        
      - name: Generate changelog
        id: changelog
        run: |
          # Extract changelog for this version
          VERSION=${{ steps.get_version.outputs.VERSION }}
          CHANGELOG=$(awk "/## ${VERSION}/{flag=1; next} /## v[0-9]/{flag=0} flag" CHANGELOG.md)
          echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
          echo "$CHANGELOG" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT
          
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: MoBot 2025 ${{ steps.get_version.outputs.VERSION }}
          body: |
            ## What's Changed
            ${{ steps.changelog.outputs.CHANGELOG }}
            
            ## Installation
            
            Download the appropriate binary for your platform and architecture.
            
            ### Linux/macOS
            ```bash
            tar xzf mobot-${{ steps.get_version.outputs.VERSION }}-<os>-<arch>.tar.gz
            chmod +x mobot-${{ steps.get_version.outputs.VERSION }}-<os>-<arch>
            sudo mv mobot-${{ steps.get_version.outputs.VERSION }}-<os>-<arch> /usr/local/bin/mobot
            ```
            
            ### Windows
            Extract the ZIP file and add the executable to your PATH.
            
          files: |
            artifacts/**/*.tar.gz
            artifacts/**/*.zip
          draft: false
          prerelease: false